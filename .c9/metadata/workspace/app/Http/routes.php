{"changed":false,"filter":false,"title":"routes.php","tooltip":"/app/Http/routes.php","value":"<?php\n\n//Ckeditor fix temp route\nRoute::get('/editor', 'CKEditorController@index');\n\n/* Authentication routes */\nRoute::get('/', ['as' => 'home', 'uses' => 'SessionController@authorizeUsersAndApplicants', 'https' => true]);\nRoute::get('/home', ['as' => 'home', 'uses' => 'SessionController@authorizeUsersAndApplicants', 'https' => true]);\n\nRoute::get('login', function() {\n    return view('session.create');\n});\n\n//Don't put this into middleware as well since it will not let the applicant logout\n//(applicant table doesn't use the role manager for the User Model)\nRoute::post('/login', 'SessionController@login');\nRoute::get('logout', 'SessionController@destroy');\n\n/* Job Routes */\n//Should not be in any middleware so that \n//job posting can be accessed by would be applicants(they need to view the job posting without logging in)\nRoute::resource('job', 'JobController');\nRoute::post('updateJob/{id}', 'JobController@update');\nRoute::get('addJobFormCompany', 'JobController@addJobFormCompany');\nRoute::post('addJobCompany', 'JobController@addJobCompany');\nRoute::get('company/{company_id}/jobs', 'JobController@getCompanyJobs');\n\n\n\nRoute::get('applyToJobForm', 'JobController@getApplyToJobForm');\nRoute::post('applyToJob', 'JobController@applyToJob');\nRoute::post('saveJobNotes', 'JobController@saveJobNotes');\nRoute::post('saveJobCriteria', 'JobController@saveJobCriteria');\n/* Check for duplicate emails upon Applying to a Job */\nRoute::post('checkApplicantDuplicateEmail', 'JobController@checkApplicantDuplicateEmail');\n\n\n/* For Registration */\nRoute::get('register', 'UserController@getRegisterForm');\nRoute::post('register', 'UserController@register');\n\n/* For Applicant */\nRoute::resource('a', 'ApplicantController');\nRoute::get('a/{id}', ['as' => 'a', 'uses' => 'ApplicantController@show', 'https' => true]);\nRoute::get('editApplicantPasswordForm', 'ApplicantController@editApplicantPasswordForm');\nRoute::post('editApplicantPassword', 'ApplicantController@editApplicantPassword');\nRoute::post('checkApplicantPassword', 'ApplicantController@checkApplicantPassword');\nRoute::post('saveApplicantNotes', 'ApplicantController@saveApplicantNotes');\nRoute::post('saveApplicantCriteria', 'ApplicantController@saveApplicantCriteria');\nRoute::post('getApplicantQuizResults', 'ApplicantController@getApplicantQuizResults');\n\n\n/* Add or Remove Applicant from the User Table */\nRoute::post('hireApplicant', 'ApplicantController@hireApplicant');\nRoute::post('fireApplicant', 'ApplicantController@fireApplicant');\n\n/* For Applicant Tags */\nRoute::post('addTag', 'JobController@addTag');\nRoute::get('getAvailableTags', 'JobController@getTags');\n\n/* For Comments */\nRoute::post('addComment', 'CommentController@addComment');\n\n/* For Organizational Chart */\nRoute::get('getChartData/{id}', 'CompanyController@getChartData');\n\n/* For Assigning User Roles */\nRoute::post('updateRole', 'CompanyController@updateRole');\n\n/* For Video */\nRoute::post('startRecording', 'VideoController@startRecording');\nRoute::post('stopRecording', 'VideoController@stopRecording');\nRoute::post('isRecording', 'VideoController@isRecording');\nRoute::post('saveVideo', 'VideoController@saveVideo');\nRoute::post('deleteVideo', 'VideoController@deleteVideo');\nRoute::put('/editRecordedVideo/{id}', 'VideoController@editRecordedVideo');\nRoute::delete('/deleteRecordedVideo/{id}', 'VideoController@deleteRecordedVideo');\nRoute::post('saveNfoJanus', 'VideoController@saveNfoJanus');\nRoute::post('saveScreenShareNfoJanus', 'VideoController@saveScreenShareNfoJanus');\nRoute::post('convertJanusVideo', 'VideoController@convertJanusVideo');\nRoute::post('convertDiscussionsJanusVideo', 'VideoController@convertDiscussionsJanusVideo');\nRoute::post('getConversionProgress', 'VideoController@getConversionProgress');\n\n\n/* For Video Status */\nRoute::post('/addVideoTag', 'VideoController@addVideoTag');\nRoute::get('/getAvailableVideoTags', 'VideoController@getVideoTags');\n\n/* For Tags */\nRoute::post('addNewTag', 'TagController@addTag');\nRoute::get('getTags/{id}/{tag_type}', 'TagController@getTags');\n/*\n * Quiz\n */\nRoute::resource('quiz', 'QuizController');\nRoute::get('quizPerCompany/{id}', 'QuizController@quizPerCompany');\nRoute::any('testSort', 'QuizController@testSort');\nRoute::post('questionSort', 'QuizController@questionSort');\nRoute::get('userSlider/{id}', 'QuizController@userSlider');\nRoute::get('quizRanking/{id}', 'QuizController@quizRanking');\nRoute::get('quizAssessment/{id}', 'QuizController@quizAssessment');\nRoute::post('quizSliderSave', 'QuizController@quizSliderSave');\nRoute::get('quizUserAssessment/{id}', 'QuizController@quizUserAssessment');\nRoute::post('quizAddPersonalCommunity', 'QuizController@quizAddPersonalCommunity');\nRoute::post('quizSearch', 'QuizController@quizSearch');\nRoute::any('quizElasticSearchView', 'QuizController@quizElasticSearchView');\nRoute::any('quizVideo', 'QuizController@quizVideo');\nRoute::post('quizSaveVideo', 'QuizController@quizSaveVideo');\nRoute::get('quizDeleteVideo/{id}', 'QuizController@quizDeleteVideo');\nRoute::post('quizDeleteResult', 'QuizController@quizDeleteResult');\n/*\n * Indeed Applicant Importer (Don't put this in any middleware, \n * the script should not login to insert the data from Indeed\n * */\n\nRoute::post('addJobFromCrawler', 'CrawlerController@addJobFromCrawler');\nRoute::post('addApplicantFromCrawler', 'CrawlerController@addApplicantFromCrawler');\n\nRoute::group(['middleware' => 'guest'], function () {\n    Route::get('forgotPassword', function () {\n        return view('session.forgotPassword');\n    });\n    Route::post('forgotPassword', 'ProfileController@forgotPassword');\n    Route::get('resetPassword/{token}/{usertype}', 'ProfileController@resetPasswordForm');\n    Route::post('resetPassword', 'ProfileController@resetPassword');\n});\n\n\nRoute::group(['middleware' => 'auth'], function () {\n\n    /**\n     * Links\n     */\n    Route::resource('links', 'LinkController');\n    Route::get('addLinkForm','LinkController@addLinkForm');\n    Route::get('addLinkFormBriefcase','LinkController@addLinkFormBriefcase');\n    Route::any('deleteLink/{id}', 'LinkController@deleteLink');\n    Route::resource('linkCategory', 'LinkCategoryController');\n    Route::post('setLinkOrder/{task_id}/{company_id}', 'LinkController@setLinkOrder');\n\n    Route::get('/billing/{billing_type}', ['uses' => 'BillingController@index'])\n            ->where('billing_type', 'invoice|estimate');\n    Route::get('/billing/{billing_type}/{billing_id}', ['uses' => 'BillingController@show'])\n            ->where('billing_type', 'invoice|estimate');\n    Route::get('/billing/{billing_type}/{billing_id}/edit', ['uses' => 'BillingController@edit'])\n            ->where('billing_type', 'invoice|estimate');\n    Route::get('/print/{billing_type}/{billing_id}', ['uses' => 'BillingController@printing'])\n            ->where('billing_type', 'invoice|estimate');\n\n    Route::resource('billing', 'BillingController');\n    Route::resource('setting', 'SettingController');\n    Route::resource('template', 'TemplateController');\n    Route::resource('item', 'ItemController');\n    Route::resource('payment', 'PaymentController');\n    Route::resource('user', 'UserController');\n    Route::resource('user.company', 'UserController');\n    Route::resource('company', 'CompanyController');\n    Route::get('addCompanyForm','CompanyController@addCompanyForm');\n    Route::get('editCompanyForm/{id}','CompanyController@editCompanyForm');\n    \n    \n    \n    Route::resource('applicant', 'ApplicantController');\n    Route::resource('assigneduser', 'AssignedController');\n\n    /* For Assigning teams for each project with a team(Auto generated team) */\n    Route::any('createTeam', 'CompanyController@createTeam');\n    /* Unassigning Team members from a project */\n    Route::any('unassignTeamMember', 'CompanyController@unassignTeamMember');\n\n    /* For Assigning Companies to a team */\n    Route::post('assignCompanyToTeam', 'CompanyController@assignCompanyToTeam');\n    Route::post('unassignCompanyFromTeam', 'CompanyController@unassignCompanyFromTeam');\n\n    /* Sharing Jobs to a User */\n    Route::post('shareJobToUser', 'CompanyController@shareJobToUser');\n    Route::post('unshareJobFromUser', 'CompanyController@unshareJobFromUser');\n\n    /* Sharing Jobs to a Company */\n    Route::post('shareJobToCompany', 'CompanyController@shareJobToCompany');\n    Route::post('unshareJobFromCompany', 'CompanyController@unshareJobFromCompany');\n\n    /* For assigning employees with tasks from the tasklist of a given project */\n    Route::any('assignTaskList', 'CompanyController@assignTaskList');\n    Route::any('unassignTaskList', 'CompanyController@unassignTaskList');\n\n    /* For assigning tests to applicants */\n    Route::any('assignTestToJob', 'CompanyController@assignTestToJob');\n    Route::any('unassignTestFromJob', 'CompanyController@unassignTestFromJob');\n\n    /* For assigning tests to jobs */\n    Route::any('assignTestToApplicant', 'CompanyController@assignTestToApplicant');\n    Route::any('unassignTestFromApplicant', 'CompanyController@unassignTestFromApplicant');\n\n    /* For sharing jobs with employees per company */\n    Route::any('shareToCompanyEmployee', 'CompanyController@shareToCompanyEmployee');\n    Route::any('unshareFromCompanyEmployee', 'CompanyController@unshareFromCompanyEmployee');\n\n    /* For Getting the tasklist when you're dropping an employee to a project */\n    Route::any('getTaskList', 'CompanyController@getTaskList');\n\n    /* Saving a Spreadsheet type task */\n    Route::any('saveSpreadsheet', 'TaskController@saveSpreadsheet');\n\n    //For CkEditor Image file upload\n    Route::any('saveImage&responseType=json', 'TaskController@saveImage');\n\n    Route::get('company/{id}', ['as' => 'company', 'uses' => 'CompanyController@show', 'https' => true]);\n\n    Route::get('getCompanyProjects/{id}', 'CompanyController@getCompanyProjects');\n\n    /* For Company Load on Demand */\n    Route::get('getJobsTab/{id}', 'CompanyController@getJobsTab');\n    Route::get('getEmployeesTab/{id}', 'CompanyController@getEmployeesTab');\n    Route::get('getPositionsTab/{id}', 'CompanyController@getPositionsTab');\n    Route::get('getAssignTab/{id}', 'CompanyController@getAssignTab');\n    Route::get('getAssignProjectsTab/{id}', 'CompanyController@getAssignProjectsTab');\n    Route::get('getAssignTestsTab/{id}', 'CompanyController@getAssignTestsTab');\n    Route::get('getAssignAuthorityLevelsTab/{id}', 'CompanyController@getAssignAuthorityLevelsTab');\n    Route::get('getShareJobsTab/{id}', 'CompanyController@getShareJobsTab');\n    /* For Projects Load on Demand */\n    Route::get('getSubprojects/{project_id}/{company_id}', 'CompanyController@getSubprojects');\n    Route::get('getSubprojectsForCompanyEmployee/{user_id}/{project_id}/{company_id}', 'CompanyController@getSubprojectsForCompanyEmployee');\n    /* For Share Companies Load on Demand */\n    Route::get('getEmployees/{company_id}/{job_id}', 'CompanyController@getEmployees');\n    /* For Assign Projects Load on Demand */\n    Route::get('getCompanyEmployeesForProject/{project_id}/{company_id}', 'CompanyController@getCompanyEmployeesForProject');\n    /* For Company Links Load on Demand */\n    Route::get('companyLinks/{company_id}', 'CompanyController@companyLinks');\n    /*For Dashboard Link Editing*/\n    Route::get('editDashboardLink/{link_id}/{company_id}', 'LinkController@editDashboardLink');\n    \n    /**\n     * CSS Reference\n     */\n    Route::resource('css', 'CssController');\n\n    /**\n     * Project\n     */\n    Route::resource('project', 'ProjectController');\n    Route::get('company/{company_id}/projects', 'ProjectController@getCompanyProjects');\n    Route::get('addProjectForm', 'ProjectController@addProjectForm');\n    Route::post('addProject', 'ProjectController@addProject');\n\n\n    /*\n     * Briefcases \n     * */\n    Route::resource('task', 'TaskController'); //This is temporary, need it for briefcases loaded as project\n    Route::resource('briefcase', 'BriefcaseController');\n\n    /*\n     * Task List Items \n     * */\n    Route::resource('taskitem', 'TaskListItemController');\n\n    /*\n     * Employees\n     * */\n    Route::get('employees/{id}', 'UserController@getEmployees');\n    Route::get('addEmployeeForm/{id}', 'UserController@addEmployeeForm');\n    Route::get('editEmployeeForm/{company_id}/{user_id}', 'UserController@editEmployeeForm');\n    Route::get('editEmployeePermissionsForm/{company_id}/{user_id}', 'UserController@editEmployeePermissionsForm');\n    Route::post('editEmployeePermissions', 'UserController@editEmployeePermissions');\n    Route::post('addEmployee', 'UserController@addEmployee');\n    Route::post('editEmployee', 'UserController@editEmployee');\n    Route::post('removeEmployeeFromCompany', 'UserController@removeEmployeeFromCompany');\n    Route::post('saveEmployeeNotes', 'UserController@saveEmployeeNotes');\n\n\n\n    /*\n     * Positions\n     */\n    Route::resource('positions', 'RoleController');\n    Route::get('addPositionForm', 'RoleController@addPositionForm');\n    Route::post('addPosition', 'RoleController@addPosition');\n    Route::get('editPositionForm/{id}', 'RoleController@editPositionForm');\n    Route::post('editPosition', 'RoleController@editPosition');\n    Route::post('deletePosition', 'RoleController@deletePosition');\n    Route::post('assignPositionPermission', 'RoleController@assignPositionPermission');\n    Route::post('unassignPositionPermission', 'RoleController@unassignPositionPermission');\n    Route::post('assignEmployeePermission', 'RoleController@assignEmployeePermission');\n    Route::post('unassignEmployeePermission', 'RoleController@unassignEmployeePermission');\n\n    /*\n     * Assigning \n     * */\n    Route::get('assignProjects/{id}', 'AssignController@assignProjects');\n    Route::get('assignTests/{id}', 'AssignController@assignTests');\n    Route::get('assignAuthorityLevels/{id}', 'AssignController@assignAuthorityLevels');\n    Route::get('assignJobs/{id}', 'AssignController@assignJobs');\n\n    /**\n     * Task List\n     */\n    Route::resource('task', 'TaskController');\n\n    /* Add Briefcase(a briefcase is a Subproject) */\n    Route::get('addBriefcaseForm', 'TaskController@addBriefcaseForm');\n    Route::post('addBriefcase', 'TaskController@addBriefcase');\n\n    Route::any('task/delete/{id}', 'TaskController@delete');\n    Route::post('taskTimer/{id}', 'TaskController@taskTimer');\n    Route::post('updateTaskTimer/{id}', 'TaskController@updateTaskTimer');\n    Route::any('deleteTaskTimer/{id}', 'TaskController@deleteTaskTimer');\n    Route::post('checkList', 'TaskController@checkList');\n    Route::post('updateCheckListStatus/{id}', 'TaskController@updateCheckListStatus');\n    Route::post('updateCheckList/{id}', 'TaskController@updateCheckList');\n    Route::any('deleteCheckList/{id}', 'TaskController@deleteCheckList');\n    Route::post('sortCheckList/{id}', 'TaskController@sortCheckList');\n    Route::post('changeCheckList/{task_id}/{task_list_item_id}', 'TaskController@changeCheckList');\n    Route::post('addNewTask', 'TaskController@addNewTask');\n    Route::post('saveTaskCheckListHeader', 'TaskController@saveTaskCheckListHeader');\n    Route::post('saveTaskCheckList', 'TaskController@saveTaskCheckList');\n    Route::post('cancelAddNewTask', 'TaskController@cancelAddNewTask');\n    Route::get('getTaskChecklistItem/{task_check_list_id}/{company_id}/{task_list_id}', 'TaskController@getTaskChecklistItem');\n    Route::post('autoSaveEditChecklist', 'TaskController@autoSaveEditChecklist');\n\n    Route::get('/data/{cacheKey}', 'CacheDataController@getCache');\n    Route::resource('event', 'EventsController');\n\n    Route::resource('bug', 'BugController');\n    Route::resource('note', 'NoteController');\n    Route::resource('comment', 'CommentController');\n    Route::resource('attachment', 'AttachmentController');\n    Route::resource('message', 'MessageController');\n    Route::resource('ticket', 'TicketController');\n    Route::post('startTask', 'TaskController@startTask');\n    Route::post('pauseTask', 'TaskController@pauseTask');\n    Route::post('resumeTask', 'TaskController@resumeTask');\n    Route::post('endTask', 'TaskController@endTask');\n    Route::post('saveCurrentTime','TaskController@saveCurrentTime');\n    Route::post('updateTaskStatus', 'TaskController@updateTaskStatus');\n    Route::post('updateProgress', 'ProjectController@updateProgress');\n    Route::post('updateBugStatus', 'BugController@updateBugStatus');\n    Route::post('updateTicketStatus', 'TicketController@updateTicketStatus');\n    Route::post('changePassword', 'ProfileController@changePassword');\n    Route::post('checkPassword', 'ProfileController@checkPassword');\n    Route::post('updateProfile', 'ProfileController@updateProfile');\n    Route::post('updateMyProfile', 'ProfileController@updateMyProfile');\n    Route::post('deleteTimer', 'ProjectController@deleteTimer');\n\n    \n    /*For Personal Dashboard*/\n    Route::get('dashboard', ['as' => 'dashboard', 'uses' => 'DashboardController@index', 'https' => true]);    \n    /*For Dashboard Job Postings(So that any user apply to all the job postings that are active)*/\n    Route::get('getJobPostings','DashboardController@getJobPostings');\n    \n    Route::get('user/{user_id}/delete', 'UserController@delete');\n    Route::get('event/{event_id}/delete', 'EventsController@delete');\n    Route::get('company/{company_id}/delete', 'CompanyController@delete');\n    Route::get('billing/{billing_id}/delete', 'BillingController@delete');\n    Route::post('deleteProject', 'ProjectController@delete');\n    Route::get('bug/{bug_id}/delete', 'BugController@delete');\n    Route::get('ticket/{ticket_id}/delete', 'TicketController@delete');\n    /* Route::get('profile', function () {\n      return View::make('user.profile', ['assets' => ['profiles']]);\n      }); */\n    Route::get('profile', 'ProfileController@index');\n    Route::get('docs', function () {\n        return View::make('docs.docs', ['assets' => []]);\n    });\n    Route::get('about', function () {\n        return View::make('about.about', ['assets' => []]);\n    });\n\n    /*\n     * Add Meeting\n     */\n    Route::resource('meeting', 'MeetingController');\n    Route::get('meetingJson', 'MeetingController@meetingJson');\n    Route::get('meetingTimezone', 'MeetingController@meetingTimezone');\n\n    /*\n     * Team Builder\n     */\n    Route::resource('teamBuilder', 'TeamBuilderController');\n    Route::get('teamBuilderJson', 'TeamBuilderController@teamBuilderJson');\n    Route::get('teamBuilderUserJson', 'TeamBuilderController@teamBuilderUserJson');\n    Route::get('teamBuilderExistingUserJson', 'TeamBuilderController@teamBuilderExistingUserJson');\n\n    /*\n     * Payroll\n     */\n    Route::resource('payroll', 'PayrollController');\n    Route::get('payrollJson', 'PayrollController@payrollJson');\n    Route::get('payroll/filter/{company_id}/{filter}/{date}','PayrollController@filter');\n    Route::get('payroll/paymentHistory/{id}','PayrollController@showPaymentHistory');\n    Route::get('payroll/payrollSettings/{id}','PayrollController@showPayrollSettings');\n    \n    //Add Payroll Column\n    Route::get('addPayrollColumnForm','PayrollController@addPayrollColumnForm');\n    Route::post('addPayrollColumn','PayrollController@addPayrollColumn');\n    \n    //Edit Payroll Column\n    Route::get('editPayrollColumnForm/{id}','PayrollController@editPayrollColumnForm');\n    Route::post('editPayrollColumn','PayrollController@editPayrollColumn');\n    \n    //Delete Payroll Column\n    Route::post('deletePayrollColumn','PayrollController@deletePayrollColumn');\n    \n    //Change payment status \n    Route::post('editPaymentStatus','PayrollController@editPaymentStatus');\n    \n    /*\n     * Search \n     * */\n    Route::get('/search/{type}', 'SearchController@search');\n    Route::get('/bulkIndex/{type}', 'SearchController@bulkIndex');\n\n    /* Search in Assign Projects */\n    Route::post('searchProjects', 'SearchController@searchProjects');\n    Route::post('searchEmployees', 'SearchController@searchEmployees');\n    Route::post('searchCompanies', 'SearchController@searchCompanies');\n    Route::post('searchTests', 'SearchController@searchTests');\n\n    /* Search in Assign Jobs */\n    Route::post('searchJobs', 'SearchController@searchJobs');\n\n    /* Search in Assign Tests */\n    Route::post('searchApplicants', 'SearchController@searchApplicants');\n\n\n    /* Discussion Pages */\n    Route::resource('discussions', 'DiscussionsController');\n\n    /* Adding Participants */\n    Route::get('addParticipantForm', 'DiscussionsController@addParticipantForm');\n    Route::post('addParticipant', 'DiscussionsController@addParticipant');\n    \n    /*Adding Employee Rates*/\n    Route::resource('rate','RateController');\n\n    /*Download Files*/\n    Route::any('downloadFile','DownloadController@getDownload');\n});\n\n/* For Public Discussion Pages */\nRoute::resource('discussions/{id}/public', 'DiscussionsController@showPublicRoom');\n\n/* Display Name */\nRoute::get('displayNameForm', 'DiscussionsController@displayNameForm');\n\nRoute::group(['prefix' => 'api'], function () {\n    Route::group(['prefix' => 'v1'], function () {\n        \n    });\n});\n\n/*Chat*/\nRoute::get('/chat/get','ChatController@get');\nRoute::resource('/chat','ChatController');\n\n/*Update Interview Question Score for Applicant*/\nRoute::put('/updateInterviewQuestionScore/{id}','ApplicantController@updateInterviewQuestionScore');\n\n/*Interview Questions*/\nRoute::resource('/interview/questions','InterviewQuestionController');\n\n\n\n/*\n * New Note\n */\nRoute::resource('newnote', 'NewNoteController');\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":0},"end":{"row":8,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1494769331630}